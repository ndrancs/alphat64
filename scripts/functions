#!/usr/bin/bash
#
# Copyright (c) alphaOS
# Written by simargl <archpup-at-gmail-dot-com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. /etc/spkg/main.config

ROOTFS="$PWD/../rootfs"
MAIN_SB="alpha_14.sb"
EXTRA_SB="extra_14.sb"
DEVEL_SB="devel64_2.sfs"
ALPHAT_SB="alphat64_2.sfs"

# VARIABLES

LINUX_SPKG="/mnt/home/data/alphaos/00_linux/spkg/packages"
UEFI_PKG="/mnt/home/data/alphaos/00_linux/spkg/other/uefi_pkg.tar.xz"

CORE_ARCH="/mnt/home/data/alphaos/01_core/arch/packages"
CORE_SPKG="/mnt/home/data/alphaos/01_core/spkg/packages"

XORG_ARCH="/mnt/home/data/alphaos/02_xorg/arch/packages"
XORG_SPKG="/mnt/home/data/alphaos/02_xorg/spkg/packages"

EXTRA_ARCH="/mnt/home/data/alphaos/03_extra/arch/packages"
EXTRA_SPKG="/mnt/home/data/alphaos/03_extra/spkg/packages"

DEVEL_ARCH="/mnt/home/data/alphaos/04_devel/arch/packages"
DEVEL_SPKG="/mnt/home/data/alphaos/04_devel/spkg/packages"

ARMDATE="2014/06/06"

# INITRAMFS VARIABLES

KERNEL_VERSION="3.14.5-ALPHAOS"
MODULES_DIR="$pkgdir/linux/install"
KERNEL_PACKAGE="linux-3.14.5-1-$CARCH.spkg"
INITRAMFS_TREE="$PWD/../initramfs"

# MAKEISO VARIABLES

HOME="/mnt/home/alphaos"
NEWISO_DIR="$pkgdir/iso"
VERSION="14"
ISO_VERSION="14.5"
DATE=$(date +"%Y%m%d")

# SB_COMPRESSION="-comp xz -b 524288 -Xbcj x86"
SB_COMPRESSION="-comp xz"

# SB BUILD FUNCTIONS

pacman_mirror_list()
{
  echo " >> pacman_mirror_list"
  echo "# WARNING! Do not edit this file if you want stable system!" > install/etc/pacman.d/mirrorlist
  echo "Server = http://seblu.net/a/arm/$arm_date/\$repo/os/\$arch" >> install/etc/pacman.d/mirrorlist
#  mv install/etc/pacman.conf install/etc/pacman.conf.tmp
#  sed -e'/^# after the header, and they will be used before the default mirrors./a [alphaos] \
#Server = http://sourceforge.net/projects/alphaos/files/packages/os/$arch' install/etc/pacman.conf.tmp > install/etc/pacman.conf
#  rm install/etc/pacman.conf.tmp
}

pacman_signature_level()
{
  echo " >> pacman_signature_level"
  sed -i 's|SigLevel    = Required DatabaseOptional|SigLevel = Never|g' install/etc/pacman.conf
  sed -i 's|LocalFileSigLevel = Optional|LocalFileSigLevel = Never|g' install/etc/pacman.conf
  sed -i 's|#TotalDownload|TotalDownload|g' install/etc/pacman.conf
} 

adding_system_info_files()
{
  echo " >> adding_system_info_files"
  echo "alphaOS $ISO_VERSION [$CARCH arch]" > install/etc/issue
  echo "DISTRIB_ID=alphaOS
DISTRIB_RELEASE=$ISO_VERSION
DISTRIB_CODENAME=none
DISTRIB_DESCRIPTION=\"alphaOS $ISO_VERSION\"" > install/etc/lsb-release
  echo "NAME=\"alphaOS\"
VERSION=\"$ISO_VERSION\"
ID=\"alphaos\"
VERSION_ID=\"$ISO_VERSION\"
PRETTY_NAME=\"alphaOS $ISO_VERSION\"
HOME_URL=\"http://alphaos.tuxfamily.org/\"
SUPPORT_URL=\"http://alphaos.tuxfamily.org/forum\"" > install/etc/os-release
}

# BASE MODULE MAKE & CLEAN
terminfo_cleanup()
{
  mkdir /tmp/terminfo
  mv install/usr/share/terminfo/* /tmp/terminfo
  mkdir install/usr/share/terminfo/{a,l,r,v,x}
  cp /tmp/terminfo/a/ansi         install/usr/share/terminfo/a
  cp /tmp/terminfo/l/linux        install/usr/share/terminfo/l
  cp /tmp/terminfo/r/rxvt         install/usr/share/terminfo/r
  cp /tmp/terminfo/x/xterm        install/usr/share/terminfo/x
  cp /tmp/terminfo/x/xterm-color  install/usr/share/terminfo/x
  cp /tmp/terminfo/x/xterm-new    install/usr/share/terminfo/x
  cp /tmp/terminfo/x/xterm-vt220  install/usr/share/terminfo/x
  cp /tmp/terminfo/v/vt100        install/usr/share/terminfo/v
  cp /tmp/terminfo/v/vt102*       install/usr/share/terminfo/v
  rm -r /tmp/terminfo
}

sb_build_base_module_cleaner()
{
  CHARMAPS_KEEP="ANSI_X3.4-1968.gz IBM437.gz IBM855.gz IBM861.gz IBM865.gz \
IBM869.gz ISO-8859-11.gz ISO-8859-15.gz UTF-8.gz CP737.gz IBM850.gz IBM857.gz \
IBM862.gz IBM866.gz ISO-8859-1.gz ISO-8859-13.gz ISO-8859-16.gz CP775.gz IBM852.gz \
IBM860.gz IBM863.gz IBM866NAV.gz ISO-8859-10.gz ISO-8859-14.gz ISO-8859-2.gz"
  echo " >> sb_build_base_module_cleaner"
  rm -r install/boot
  rm -r install/usr/bin/alsaloop
  rm -r install/usr/bin/floppyd
  rm -r install/usr/bin/gresource
  rm -r install/usr/share/sounds
  rm -r install/usr/share/licenses
  rm -r install/usr/share/locale
  mkdir /tmp/charmaps
  for i in $CHARMAPS_KEEP; do mv install/usr/share/i18n/charmaps/$i /tmp/charmaps; done
  rm install/usr/share/i18n/charmaps/*
  mv /tmp/charmaps/* install/usr/share/i18n/charmaps
  rm -r /tmp/charmaps
  terminfo_cleanup
}

sb_build_base_module_splitter()
{
  echo " >> sb_build_base_module_splitter"
  dname="core-dev"
  revision="1"
  mkdir -p $dname/install/{usr/{include,lib,share},var/lib/spkg/installed/$dname}
  
  echo name="\"$dname"\"  > $dname/install/var/lib/spkg/installed/$dname/def
  echo version="\"$VERSION\""  >> $dname/install/var/lib/spkg/installed/$dname/def
  echo revision="\"$revision\""  >> $dname/install/var/lib/spkg/installed/$dname/def
  echo category="\"development"\"  >> $dname/install/var/lib/spkg/installed/$dname/def
  echo description="\"$dname development files"\"  >> $dname/install/var/lib/spkg/installed/$dname/def
  
  mv install/usr/include $dname/install/usr 2>/dev/null
  mv install/usr/lib/*.a $dname/install/usr/lib 2>/dev/null
  mv install/usr/lib/pkgconfig $dname/install/usr/lib 2>/dev/null
  mv install/usr/lib/python2.7 $dname/install/usr/lib 2>/dev/null
  mv install/usr/lib/python3.3 $dname/install/usr/lib 2>/dev/null
  mv install/usr/share/aclocal $dname/install/usr/share 2>/dev/null
  mv install/usr/share/gir-1.0 $dname/install/usr/share 2>/dev/null
  
  spkg pack $dname
  mv $dname-$VERSION-$revision-$CARCH.spkg $DEVEL_SPKG
}

sb_build_alphat_base()
{
  rm -r $maindir/*
  mkdir -p $pkgdir/basesfs

  cp $LINUX_SPKG/$KERNEL_PACKAGE $pkgdir/basesfs
  cp $CORE_ARCH/* $pkgdir/basesfs
  cp $CORE_SPKG/* $pkgdir/basesfs
  cp $EXTRA_ARCH/* $pkgdir/basesfs
  cp $EXTRA_SPKG/* $pkgdir/basesfs
  cp $XORG_ARCH/* $pkgdir/basesfs
  cp $XORG_SPKG/* $pkgdir/basesfs
  
  cd $pkgdir/basesfs
  spkg -eall
  
  pacman_mirror_list
  pacman_signature_level
  adding_system_info_files
  sb_build_extra_module_cleaner
  sb_build_base_module_cleaner
  sb_build_base_module_splitter
  mv install/etc/modules install/etc/modules_alphat

  cp -af $ROOTFS/* install
  mkdir -p /usr/src/linux
  ln -sf /usr/src/linux install/usr/lib/modules/3.14.0-ALPHAOS/source
  ln -sf /usr/src/linux install/usr/lib/modules/3.14.0-ALPHAOS/build

  for i in $(find install/home/alpha -type d); do chown alpha:alpha $i; done
  for i in $(find install/home/alpha -type f); do chown alpha:alpha $i; done

  mksquashfs install $ALPHAT_SB $SB_COMPRESSION
  sha1sum $ALPHAT_SB > $ALPHAT_SB.sha1
}

sb_build_base_module()
{
  rm -r $maindir/*
  mkdir -p $pkgdir/base

  cp $LINUX_SPKG/$KERNEL_PACKAGE $pkgdir/base
  cp $CORE_ARCH/* $pkgdir/base
  cp $CORE_SPKG/* $pkgdir/base
  
  cd $pkgdir/base
  spkg -eall
  
  pacman_mirror_list
  pacman_signature_level
  adding_system_info_files
  sb_build_base_module_cleaner
  sb_build_base_module_splitter
  
  cp -af $ROOTFS/* install
  
  mksquashfs install $MAIN_SB $SB_COMPRESSION
}

# EXTRA MODULE MAKE & CLEAN

sb_build_extra_module_cleaner()
{
  echo " >> sb_build_extra_module_cleaner"
  rm -r install/usr/share/applications/dconf-editor.desktop
#  rm -r install/usr/share/applications/mpv.desktop
  rm -r install/usr/share/applications/qv4l2.desktop
  #rm -r install/usr/share/applications/openbox.desktop
  for i in 16x16 22x22 24x24 32x32 48x48 64x64 256x256 scalable
  do rm -r install/usr/share/icons/hicolor/${i}/apps/*; done
  rm -r install/usr/bin/alsa_in
  rm -r install/usr/bin/alsa_out
  rm -r install/usr/bin/sensord
  rm -r install/usr/share/icons/HighContrast
  for i in $(ls install/usr/share/themes --hide Alpha); do rm -r install/usr/share/themes/$i;done
  rm install/usr/bin/enca
  rm install/usr/bin/enconv
  rm install/usr/bin/jack_netsource
  rm install/usr/bin/tiffgt
  rm -r install/usr/share/jack-audio-connection-kit/reference/html
  rm -r install/usr/share/imlib2/data/images
  sed -i 's|pcmanfm|spacefm|g' install/usr/bin/xdg-open
  sed -i 's|text/x-shellscript;application/x-shellscript;text/x-sh|text/x-shellscript;application/x-shellscript;text/x-sh;text/x-pkgbuild;text/x-def|g' install/usr/share/gtksourceview-3.0/language-specs/sh.lang
}

sb_build_extra_module()
{
  rm -r $maindir/*
  mkdir -p $pkgdir/extra

  cp $EXTRA_ARCH/* $pkgdir/extra
  cp $EXTRA_SPKG/* $pkgdir/extra
  cp $XORG_ARCH/* $pkgdir/extra
  cp $XORG_SPKG/* $pkgdir/extra
  
  cd $pkgdir/extra
  spkg -eall
  
  sb_build_extra_module_cleaner
  
  mksquashfs install $EXTRA_SB $SB_COMPRESSION
}

# DEVEL MODULE MAKE & CLEAN

sb_build_devel_module_cleaner()
{
  echo " >> sb_build_devel_module_cleaner"
  rm -r install/usr/share/applications/CMake.desktop
  rm -r install/usr/share/locale
  rm -r install/usr/share/licenses
  rm -r install/usr/share/pixmaps
}

sb_build_devel_module()
{
  rm -r $maindir/*
  mkdir -p $pkgdir/dev

  cp $DEVEL_ARCH/* $pkgdir/dev
  cp $DEVEL_SPKG/* $pkgdir/dev
  
  cd $pkgdir/dev
  spkg -eall
  
  sb_build_devel_module_cleaner  

  mksquashfs install $DEVEL_SB $SB_COMPRESSION
  sha1sum $DEVEL_SB > $DEVEL_SB.sha1
}

# CHROOT FUNCTIONS

chroot_enter()
{
  cp -rf ../spkg $pkgdir
  cd $pkgdir
  spkg -eall
  #cp -rf spkg install
  mv spkg install
  mknod -m 622 install/dev/console c 5 1
  mknod -m 666 install/dev/null c 1 3
  mknod -m 666 install/dev/zero c 1 5
  mknod -m 666 install/dev/ptmx c 5 2
  mknod -m 666 install/dev/tty c 5 0
  mknod -m 444 install/dev/random c 1 8
  mknod -m 444 install/dev/urandom c 1 9
  
  #mkdir -p install/mnt/home/data/spkg/def-scripts
  mkdir -p install/mnt/home/data/spkg
  mkdir -p install/mnt/live/tmp
  mkdir -p install/mnt/home/alphaos
  
  pacman_mirror_list
  pacman_signature_level
  adding_system_info_files

  chroot install
}

chroot_make_minimal()
{
  rm -r $maindir/*
  mkdir -p $pkgdir

  cp $CORE_ARCH/* $pkgdir
  cp $CORE_SPKG/* $pkgdir
  cp $DEVEL_ARCH/* $pkgdir
  cp $DEVEL_SPKG/* $pkgdir
  
  chroot_enter
}

chroot_make_xorg()
{
  rm -r $maindir/*
  mkdir -p $pkgdir

  cp $CORE_ARCH/* $pkgdir
  cp $CORE_SPKG/* $pkgdir
  cp $DEVEL_ARCH/* $pkgdir
  cp $DEVEL_SPKG/* $pkgdir
  cp $XORG_ARCH/* $pkgdir
  cp $XORG_SPKG/* $pkgdir
  
  chroot_enter
}

chroot_make_full()
{
  rm -r $maindir/*
  mkdir -p $pkgdir

  cp $CORE_ARCH/* $pkgdir
  cp $CORE_SPKG/* $pkgdir
  cp $DEVEL_ARCH/* $pkgdir
  cp $DEVEL_SPKG/* $pkgdir
  cp $XORG_ARCH/* $pkgdir
  cp $XORG_SPKG/* $pkgdir
  cp $EXTRA_ARCH/* $pkgdir
  cp $EXTRA_SPKG/* $pkgdir
  
  chroot_enter
}

# INIT FUNCTIONS

initramfs_prepare_add_links()
{
  for i in [ env killall ping switch_root [[ ether-wake killall5 ping6 sync \
addgroup expand last pipe_progress sysctl adduser expr less pivot_root tac \
ar false linux32 poweroff tail arping fbset linux64 printenv tar awk \
fbsplash linuxrc printf tee base64 fdflush ln ps telnet basename fdformat \
loadfont pstree test bash fdisk loadkmap pwd tftp bbconfig  fgconsole \
logger rdate time blkid fgrep login rdev top blockdev  find logname \
readahead touch bunzip2 findfs losetup readlink tr bzcat fold ls \
readprofile traceroute bzip2 free lsattr realpath traceroute6 cat \
freeramdisk lsmod reboot true catv fsck lsof renice tty chattr fsync lspci \
reset tune2fs chgrp fuser lsusb resize udhcpc chmod getopt lzcat rev umount \
chown getty lzma rm uname chpasswd grep makedevs rmdir uncompress chroot \
gunzip md5sum rmmod unexpand chrt gzip mdev route uniq chvt halt mesg \
rtcwake unix2dos cksum hdparm microcom run-parts unlzma clear head mkdir \
runlevel unxz cmp hexdump mke2fs sed unzip comm hostid mkfifo seq uptime \
cp hostname mkfs.ext2 setarch usleep cpio httpd mknod setconsole uudecode \
cryptpw hush mkpasswd setkeycodes uuencode cut hwclock mkswap setlogcons \
vconfig date id mktemp setserial vi dc ifconfig modinfo setsid vlock dd \
ifdown modprobe sh watch deallocvt ifup more sha1sum watchdog delgroup \
inetd mount sha256sum wc deluser mountpoint sha512sum wget devmem insmod \
mt sleep which df install mv sort who diff iostat nameif split whoami \
dirname ip netstat start-stop-daemon xargs dmesg ipaddr nice stat xz dnsd \
ipcrm nohup strings xzcat dnsdomainname ipcs nslookup stty yes dos2unix \
iplink od su zcat du iproute openvt sulogin dumpkmap iprule passwd sum \
echo iptunnel patch swapoff egrep kill pidof swapon; do
  ln -s busybox usr/bin/$i; done
  
  ln -s usr/bin bin
  ln -s usr/bin sbin
  ln -s usr/lib lib
  ln -s ../../init usr/bin/init
}


initramfs_prepare()
{
  rm -r $maindir/*
  mkdir -p $pkgdir/initramfs/install
  cp $LINUX_SPKG/$KERNEL_PACKAGE $pkgdir
  cd $pkgdir
  spkg -e $KERNEL_PACKAGE
  
  cd $pkgdir/initramfs/install

  for file in busybox mount.ntfs-3g e2fsck resize2fs; do
    install -Dm755 $INITRAMFS_TREE/binaries/$file usr/bin/$file
  done
  
  tar -xf $INITRAMFS_TREE/dev_initramfs.tar.xz -C $PWD
  
  install -d -m1777 tmp
  install -d etc
  install -d var/log
  
  install -Dm755 $INITRAMFS_TREE/init init
  
  install -Dm644 $INITRAMFS_TREE/.config usr/lib/.config
  install -Dm644 $INITRAMFS_TREE/livekitlib usr/lib/livekitlib
  
  touch etc/fstab
  touch etc/mtab
  echo "root::0:0::/root:/bin/bash" > etc/passwd
  initramfs_prepare_add_links
}

initramfs_make_directories()
{
  mkdir -p usr/lib/modules/$KERNEL_VERSION/kernel/drivers/block
  mkdir -p usr/lib/modules/$KERNEL_VERSION/kernel/fs/{fuse,squashfs}
}

initramfs_copy_modules()
{
  echo "Copying..."
  cp "$MODULES_DIR/usr/lib/modules/$KERNEL_VERSION/kernel/drivers/block/loop.ko" "usr/lib/modules/$KERNEL_VERSION/kernel/drivers/block/loop.ko"
  cp "$MODULES_DIR/usr/lib/modules/$KERNEL_VERSION/kernel/fs/fuse/fuse.ko" "usr/lib/modules/$KERNEL_VERSION/kernel/fs/fuse/fuse.ko"
  cp "$MODULES_DIR/usr/lib/modules/$KERNEL_VERSION/kernel/fs/fuse/cuse.ko" "usr/lib/modules/$KERNEL_VERSION/kernel/fs/fuse/cuse.ko"
  cp "$MODULES_DIR/usr/lib/modules/$KERNEL_VERSION/kernel/fs/squashfs/squashfs.ko" "usr/lib/modules/$KERNEL_VERSION/kernel/fs/squashfs/squashfs.ko"
}

initramfs_depmod()
{
  echo "Running depmod"
  depmod $KERNEL_VERSION -b $PWD
  sed -i "s|kernel/|/usr/lib/modules/"${KERNEL_VERSION}"/kernel/|g" "usr/lib/modules/$KERNEL_VERSION/modules.dep"
  echo "Compress and exit"
  find . -print | cpio -o -H newc 2>/dev/null | xz -f --extreme --check=crc32 > $pkgdir/initrfs.img
}

# MAKEISO FUNCTIONS

makeiso_standard()
{
  rm -r $NEWISO_DIR/tmp 2>/dev/null
  mkdir -p $NEWISO_DIR/tmp/alphaos/{boot,modules}
  cp $HOME/{$MAIN_SB,$EXTRA_SB} $NEWISO_DIR/tmp/alphaos
  cp $HOME/boot/{initrfs.img,vmlinuz} $NEWISO_DIR/tmp/alphaos/boot
  [ ! -f $UEFI_PKG ] && wget http://sourceforge.net/projects/alphaos/files/sources/$(basename $UEFI_PKG) -P $(dirname $UEFI_PKG)
  [ ! -f $UEFI_PKG ] && exit 1
  tar -xf $UEFI_PKG -C $NEWISO_DIR/tmp
  cd $NEWISO_DIR
  xorriso -as mkisofs -rock -omit-version-number -disable-deep-relocation -joliet -b isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot --efi-boot efiboot.img -no-emul-boot -o alphaos_${ISO_VERSION}-$DATE-$CARCH.iso tmp
  isohybrid alphaos_${ISO_VERSION}-$DATE-$CARCH.iso
  md5sum alphaos_${ISO_VERSION}-$DATE-$CARCH.iso > alphaos_${ISO_VERSION}-$DATE-$CARCH.iso.md5
  rm -r $NEWISO_DIR/tmp
}

makeiso_minimal()
{
  rm -r $NEWISO_DIR/tmp 2>/dev/null
  mkdir -p $NEWISO_DIR/tmp/alphaos/{boot,modules}
  cp $HOME/$MAIN_SB $NEWISO_DIR/tmp/alphaos
  cp $HOME/boot/{initrfs.img,vmlinuz} $NEWISO_DIR/tmp/alphaos/boot
  [ ! -f $UEFI_PKG ] && wget http://sourceforge.net/projects/alphaos/files/sources/$(basename $UEFI_PKG) -P $(dirname $UEFI_PKG)
  [ ! -f $UEFI_PKG ] && exit 1
  tar -xf $UEFI_PKG -C $NEWISO_DIR/tmp
  cd $NEWISO_DIR
  xorriso -as mkisofs -rock -omit-version-number -disable-deep-relocation -joliet -b isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot --efi-boot efiboot.img -no-emul-boot -o alphaos_${ISO_VERSION}-$DATE-$CARCH.iso tmp
  isohybrid alphaos_${ISO_VERSION}-$DATE-$CARCH.iso
  md5sum alphaos_${ISO_VERSION}-$DATE-$CARCH.iso > alphaos_${ISO_VERSION}-$DATE-$CARCH.iso.md5
  rm -r $NEWISO_DIR/tmp
}
